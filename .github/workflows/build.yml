# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build
on:
    push:
    pull_request:
    workflow_dispatch:
defaults:
    run:
        shell: bash
env:
    DOTNET_CLI_TELEMETRY_OPTOUT: true
    DOTNET_GENERATE_ASPNET_CERTIFICATE: false
    DOTNET_NOLOGO: true
jobs:
    build:
        strategy:
            fail-fast: false
            matrix:
                os:
                    - macos-latest
                    - ubuntu-latest
                    - windows-latest
                cfg:
                    - Debug
                    - Release
                mode:
                    - Fast
                    - Safe
                    - Small
                exclude:
                    - cfg: Debug
                      mode: Fast
                    - cfg: Debug
                      mode: Small
        runs-on: ${{ matrix.os }}
        steps:
            - name: Clone repository
              uses: actions/checkout@v3.0.0
              with:
                  fetch-depth: 0
                  submodules: recursive
            - name: Set up .NET
              uses: actions/setup-dotnet@v2.0.0
            - name: Build project
              run: |
                  dotnet tool restore
                  dotnet build
            - name: Restore samples
              run: |
                  dotnet restore src/samples
            - name: Build samples
              if: matrix.os != 'macos-latest'
              run: |
                  dotnet build src/samples -c ${{ matrix.cfg }} --no-restore -p:ReleaseMode=${{ matrix.mode }} -v:d
            - name: Test samples
              if: matrix.os != 'macos-latest'
              run: |
                  dotnet test src/samples -c ${{ matrix.cfg }} --no-restore -p:ReleaseMode=${{ matrix.mode }} -v:d
            - name: Pack samples
              if: matrix.os != 'macos-latest'
              run: |
                  dotnet pack src/samples -c ${{ matrix.cfg }} --no-build -v:d
            - name: Publish samples
              if: matrix.os != 'macos-latest'
              run: |
                  dotnet publish src/samples -c ${{ matrix.cfg }} --no-build -v:d
            - name: Clean samples
              if: matrix.os != 'macos-latest'
              run: |
                  dotnet clean src/samples -c ${{ matrix.cfg }} -v:d
