<!-- SPDX-License-Identifier: 0BSD -->

<Project>
    <!--
    Here we override some properties from Microsoft.NET.Sdk to disable default
    functionality that either breaks us or just slows down the build for no
    benefit.
    -->
    <PropertyGroup>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <DisableImplicitFrameworkDefines>true</DisableImplicitFrameworkDefines>
        <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
        <GenerateDependencyFile>false</GenerateDependencyFile>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <ShouldBeValidatedAsExecutableReference>false</ShouldBeValidatedAsExecutableReference>
        <TargetFramework>netstandard2.0</TargetFramework>
    </PropertyGroup>

    <!--
    If a RuntimeIdentifier value has not been set, it means the Build, Clean,
    and Publish targets should run inner builds for every RID supported by the
    project, and Pack should include artifacts from every RID. That said, for
    running and testing, we still need to run natively by default, so we still
    have to actually set a default RID.

    We use IsOuterBuild to disambiguate between us setting a default RID and the
    user setting a RID on their own.
    -->
    <PropertyGroup Condition="'$(RuntimeIdentifier)' == ''">
        <RuntimeIdentifier>$(NETCoreSdkPortableRuntimeIdentifier)</RuntimeIdentifier>
        <IsOuterBuild>true</IsOuterBuild>
    </PropertyGroup>
</Project>
